{"ast":null,"code":"var _jsxFileName = \"/Users/vihangawagholkar/Desktop/firewatch/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"../api/api\"; // Make sure this has baseURL + withCredentials: true\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(console.log(\"User after login:\", user), console.log(\"isAuthenticated:\", !!user));\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Check if user is logged in on first load\n  useEffect(() => {\n    axios.get(\"/api/auth/me\", {\n      withCredentials: true\n    }).then(res => {\n      setUser(res.data);\n    }).catch(() => {\n      setUser(null);\n    }).finally(() => setLoading(false));\n  }, []);\n\n  // Login\n  const login = async credentials => {\n    const res = await axios.post(\"/api/auth/login\", credentials, {\n      withCredentials: true\n    });\n    setUser(res.data.user);\n    return res;\n  };\n\n  // Logout\n  const logout = async () => {\n    try {\n      await axios.post(\"/api/auth/logout\", {}, {\n        withCredentials: true\n      });\n      setUser(null);\n      navigate(\"/login\");\n    } catch (err) {\n      console.error(\"Logout error:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      isAuthenticated: !!user,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","console","log","user","AuthProvider","children","_s","setUser","loading","setLoading","navigate","get","withCredentials","then","res","data","catch","finally","login","credentials","post","logout","err","error","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/vihangawagholkar/Desktop/firewatch/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"../api/api\"; // Make sure this has baseURL + withCredentials: true\nimport { useNavigate } from 'react-router-dom';\n\nconst AuthContext = createContext(console.log(\"User after login:\", user),\nconsole.log(\"isAuthenticated:\", !!user));\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Check if user is logged in on first load\n  useEffect(() => {\n    axios.get(\"/api/auth/me\", { withCredentials: true })\n      .then(res => {\n        setUser(res.data);\n      })\n      .catch(() => {\n        setUser(null);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  // Login\n  const login = async (credentials) => {\n    const res = await axios.post(\"/api/auth/login\", credentials, {\n      withCredentials: true\n    });\n    setUser(res.data.user);\n    return res;\n  };\n\n  // Logout\n  const logout = async () => {\n    try {\n      await axios.post(\"/api/auth/logout\", {}, { withCredentials: true });\n      setUser(null);\n      navigate(\"/login\");\n    } catch (err) {\n      console.error(\"Logout error:\", err);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{\n      user,\n      login,\n      logout,\n      isAuthenticated: !!user,\n      loading\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,OAAOC,KAAK,MAAM,YAAY,CAAC,CAAC;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGR,aAAa,CAACS,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,IAAI,CAAC,EACxEF,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;AAExC,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACH,IAAI,EAAEI,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMe,QAAQ,GAAGb,WAAW,CAAC,CAAC;;EAE9B;EACAH,SAAS,CAAC,MAAM;IACdE,KAAK,CAACe,GAAG,CAAC,cAAc,EAAE;MAAEC,eAAe,EAAE;IAAK,CAAC,CAAC,CACjDC,IAAI,CAACC,GAAG,IAAI;MACXP,OAAO,CAACO,GAAG,CAACC,IAAI,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAAC,MAAM;MACXT,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC,CACDU,OAAO,CAAC,MAAMR,UAAU,CAAC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnC,MAAML,GAAG,GAAG,MAAMlB,KAAK,CAACwB,IAAI,CAAC,iBAAiB,EAAED,WAAW,EAAE;MAC3DP,eAAe,EAAE;IACnB,CAAC,CAAC;IACFL,OAAO,CAACO,GAAG,CAACC,IAAI,CAACZ,IAAI,CAAC;IACtB,OAAOW,GAAG;EACZ,CAAC;;EAED;EACA,MAAMO,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMzB,KAAK,CAACwB,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,EAAE;QAAER,eAAe,EAAE;MAAK,CAAC,CAAC;MACnEL,OAAO,CAAC,IAAI,CAAC;MACbG,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZrB,OAAO,CAACsB,KAAK,CAAC,eAAe,EAAED,GAAG,CAAC;IACrC;EACF,CAAC;EAED,oBACEvB,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAC3BtB,IAAI;MACJe,KAAK;MACLG,MAAM;MACNK,eAAe,EAAE,CAAC,CAACvB,IAAI;MACvBK;IACF,CAAE;IAAAH,QAAA,EACCA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACxB,EAAA,CAhDWF,YAAY;EAAA,QAGNP,WAAW;AAAA;AAAAkC,EAAA,GAHjB3B,YAAY;AAkDzB,OAAO,MAAM4B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxC,UAAU,CAACO,WAAW,CAAC;AAAA;AAACiC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}