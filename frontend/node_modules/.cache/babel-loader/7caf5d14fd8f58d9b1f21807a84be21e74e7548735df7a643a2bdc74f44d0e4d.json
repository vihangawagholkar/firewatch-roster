{"ast":null,"code":"var _jsxFileName = \"/Users/vihangawagholkar/Desktop/firewatch/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"../services/api\"; // Make sure this has baseURL + withCredentials: true\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // To show spinner if needed\n\n  // Check if user is logged in on first load\n  useEffect(() => {\n    axios.get(\"/api/auth/me\", {\n      withCredentials: true\n    }).then(res => {\n      setUser(res.data);\n    }).catch(() => {\n      setUser(null);\n    }).finally(() => setLoading(false));\n  }, []);\n\n  // Login (save user state after success)\n  const login = async credentials => {\n    const res = await axios.post(\"/api/auth/login\", credentials, {\n      withCredentials: true\n    });\n    setUser(res.data.user);\n    return res;\n  };\n\n  // Logout (clear session)\n  const logout = async () => {\n    try {\n      await axios.post(\"http://localhost:3001/api/auth/logout\", {}, {\n        withCredentials: true\n      });\n      setUser(null);\n      setIsAuthenticated(false);\n      navigate(\"/login\");\n    } catch (err) {\n      console.error(\"Logout error:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      isAuthenticated: !!user,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\n/*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n  value: {\n    user,\n    setUser,\n    isAuthenticated,\n    setIsAuthenticated,\n    loading,\n    logout\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 56,\n  columnNumber: 1\n}, this);\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","get","withCredentials","then","res","data","catch","finally","login","credentials","post","logout","setIsAuthenticated","navigate","err","console","error","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vihangawagholkar/Desktop/firewatch/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"../services/api\"; // Make sure this has baseURL + withCredentials: true\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // To show spinner if needed\n\n  // Check if user is logged in on first load\n  useEffect(() => {\n    axios.get(\"/api/auth/me\", { withCredentials: true })\n      .then(res => {\n        setUser(res.data);\n      })\n      .catch(() => {\n        setUser(null);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  // Login (save user state after success)\n  const login = async (credentials) => {\n    const res = await axios.post(\"/api/auth/login\", credentials, {\n      withCredentials: true\n    });\n    setUser(res.data.user);\n    return res;\n  };\n\n  // Logout (clear session)\n  const logout = async () => {\n    try {\n      await axios.post(\"http://localhost:3001/api/auth/logout\", {}, { withCredentials: true });\n      setUser(null);\n      setIsAuthenticated(false);\n      navigate(\"/login\");\n    } catch (err) {\n      console.error(\"Logout error:\", err);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{\n      user,\n      login,\n      logout,\n      isAuthenticated: !!user,\n      loading\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n<AuthContext.Provider value={{ user, setUser, isAuthenticated, setIsAuthenticated, loading, logout }}></AuthContext.Provider>"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,OAAOC,KAAK,MAAM,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9C;EACAD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACW,GAAG,CAAC,cAAc,EAAE;MAAEC,eAAe,EAAE;IAAK,CAAC,CAAC,CACjDC,IAAI,CAACC,GAAG,IAAI;MACXN,OAAO,CAACM,GAAG,CAACC,IAAI,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAAC,MAAM;MACXR,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC,CACDS,OAAO,CAAC,MAAMP,UAAU,CAAC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnC,MAAML,GAAG,GAAG,MAAMd,KAAK,CAACoB,IAAI,CAAC,iBAAiB,EAAED,WAAW,EAAE;MAC3DP,eAAe,EAAE;IACnB,CAAC,CAAC;IACFJ,OAAO,CAACM,GAAG,CAACC,IAAI,CAACR,IAAI,CAAC;IACtB,OAAOO,GAAG;EACZ,CAAC;;EAED;EACA,MAAMO,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMrB,KAAK,CAACoB,IAAI,CAAC,uCAAuC,EAAE,CAAC,CAAC,EAAE;QAAER,eAAe,EAAE;MAAK,CAAC,CAAC;MACxFJ,OAAO,CAAC,IAAI,CAAC;MACbc,kBAAkB,CAAC,KAAK,CAAC;MACzBC,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAAC;IACrC;EACF,CAAC;EAED,oBACEtB,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAC3BrB,IAAI;MACJW,KAAK;MACLG,MAAM;MACNQ,eAAe,EAAE,CAAC,CAACtB,IAAI;MACvBE;IACF,CAAE;IAAAJ,QAAA,EACCA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3B,EAAA,CAhDWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAkDzB,aAAAF,OAAA,CAACC,WAAW,CAACwB,QAAQ;EAACC,KAAK,EAAE;IAAErB,IAAI;IAAEC,OAAO;IAAEqB,eAAe;IAAEP,kBAAkB;IAAEb,OAAO;IAAEY;EAAO;AAAE;EAAAS,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAuB,CAAC;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}